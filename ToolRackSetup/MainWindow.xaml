<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToolRackSetup"
        xmlns:properties="clr-namespace:ToolRackSetup.Properties"
        xmlns:Collections="clr-namespace:System.Collections;assembly=System.Collections.NonGeneric" xmlns:System="clr-namespace:System;assembly=netstandard" x:Name="mainWindow" x:Class="ToolRackSetup.MainWindow"
        mc:Ignorable="d"
        Title="Tools" Height="666" Width="885" Closing="window_Closing" MinWidth="885" MinHeight="600" Closed="mainWindow_Closed" Activated="mainWindow_Activated">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:PocketStyleConverter x:Key="pocketStyleConverter"/>
        <BitmapImage x:Key="xMinusImage" UriSource="tool_fork_x_minus.png" />
        <BitmapImage x:Key="xPlusImage" UriSource="tool_fork_x_plus.png" />
        <BitmapImage x:Key="yMinusImage" UriSource="tool_fork_y_minus.png" />
        <BitmapImage x:Key="yPlusImage" UriSource="tool_fork_y_plus.png" />
        <BitmapImage x:Key="holeImage" UriSource="hole.png" />

        <SolidColorBrush  Color="#d1d1d1" x:Key="infoTextColor" />
        <SolidColorBrush  Color="#6c6c6c" x:Key="backgroundColor" />
        <SolidColorBrush  Color="#494949" x:Key="editBackgroundColor" />
        <SolidColorBrush  Color="#FF005ABE" x:Key="selectedRowBackgroundColor" />
        <SolidColorBrush  Color="#7f7f7f" x:Key="menuUneditableColor" />
        

        <System:Double x:Key="FontSize-Normal">18</System:Double>

        <Style TargetType="Window">
            <Setter Property="Background" Value="{DynamicResource backgroundColor}" />
        </Style>

        <Style TargetType="Control" x:Key="BaseColors">
            <Setter Property="Foreground" Value="{DynamicResource infoTextColor}" />
            <Setter Property='FontSize' Value="{DynamicResource FontSize-Normal}"/>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground"
              Value="{DynamicResource menuUneditableColor}" />
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style TargetType="{x:Type local:ClickSelectTextBox}" BasedOn="{StaticResource BaseColors}" >
            <Setter Property="Background" Value="{DynamicResource editBackgroundColor}" />
            <Setter Property="Height" Value="26"></Setter>
            <Setter Property="VerticalContentAlignment" Value="Bottom"/>

        </Style>

        <Style TargetType="TextBox" BasedOn="{StaticResource BaseColors}">
        </Style>
        <Style TargetType="Label">
            <Setter Property="Foreground" Value="{DynamicResource infoTextColor}" />
            <Setter Property='FontSize' Value="{DynamicResource FontSize-Normal}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>


            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground"
                 Value="{DynamicResource menuUneditableColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="{DynamicResource infoTextColor}" />
            <Setter Property='FontSize' Value="{DynamicResource FontSize-Normal}"/>

            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground"
              Value="{DynamicResource menuUneditableColor}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ComboBoxItem">

        </Style>
        <Style TargetType="CheckBox" BasedOn="{StaticResource BaseColors}">
            <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
            <Setter Property="Height" Value="30"></Setter>


        </Style>
        <Style TargetType="ListView">
            <Setter Property="Foreground" Value="{DynamicResource infoTextColor}" />
            <Setter Property="Background" Value="{DynamicResource backgroundColor}" />

        </Style>
        <Style TargetType="TabControl">
            <Setter Property="Background" Value="{DynamicResource backgroundColor}" />
        </Style>

        <Style x:Key="MyListViewStyle" TargetType="{x:Type ListViewItem}">

            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Margin" Value="0,-1,0,0"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border
                         BorderBrush="Transparent"
                         BorderThickness="2"
                         Background="{TemplateBinding Background}">
                            <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background"
                      Value="{DynamicResource selectedRowBackgroundColor}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="Black" />
                </Trigger>

            </Style.Triggers>
        </Style>

        <Style x:Key="PocketListViewStyle"  TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MyListViewStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding ToolInfo.IsInSpindle}"
                     Value="True">
                    <Setter Property="Background"
                         Value="DarkGreen" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ToolTableListViewStyle"  TargetType="{x:Type ListViewItem}" BasedOn="{StaticResource MyListViewStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsInSpindle}"
                    Value="True">
                    <Setter Property="Background"
                        Value="DarkGreen" />
                </DataTrigger>
            </Style.Triggers>
        </Style>


    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TabControl Grid.ColumnSpan="2">
            <TabItem Header="Tool Table" >
                <Grid>
                    <ListView x:Name="lstvwTools" Margin="1,2,0,1" SelectionChanged="ListView_SelectionChanged" SelectionMode="Single" FontSize="16" d:ItemsSource="{d:SampleData ItemCount=5}"
                              ItemContainerStyle="{StaticResource ToolTableListViewStyle}">




                        <ListView.View>
                            <GridView AllowsColumnReorder="False">
                                <GridViewColumn Header="Tool" Width="50" DisplayMemberBinding="{Binding Number, StringFormat=\{0:D\}}"/>

                                <GridViewColumn Header="Pocket" Width="50" DisplayMemberBinding="{Binding Pocket, StringFormat=\{0:D\}}"/>
                                <GridViewColumn Header="Description" Width="300">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <local:ClickSelectTextBox BorderThickness="1" Text="{Binding Description, Mode=TwoWay}" MaxLength="19" MaxLines="1" KeyUp="txtBox_KeyUp" FontSize="18" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Height" Width="100">
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="27"/>
                                                </Grid.ColumnDefinitions>

                                                <Label Content="{Binding HeightOffset}" ContentStringFormat="{}{0:F3}" HorizontalContentAlignment="Right" Height="26" Padding="0,2,0,0"/>

                                                <Button x:Name="btnResetHeight" Content="X"  Width="22"  Margin="5,0,0,0" HorizontalAlignment="Right" Grid.Column="1" Click="btnResetHeight_Click"/>

                                            </Grid>

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>


                                <GridViewColumn Header="Diameter" Width="95">
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="27"/>
                                                </Grid.ColumnDefinitions>

                                                <local:ClickSelectTextBox BorderThickness="1" Text="{Binding Diameter, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" KeyUp="txtBox_KeyUp" GotFocus="txtBoxToolNumber_GotFocus" />

                                                <Button x:Name="btnReseDiameter" Content="X"  Width="22"  Margin="5,0,0,0" HorizontalAlignment="Right" Grid.Column="1"  Click="BtnResetDiameter_click" />

                                            </Grid>

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                            </GridView>
                        </ListView.View>


                    </ListView>
                </Grid>
            </TabItem>


            <TabItem Header="ATC Setup" >

                <Grid Margin="0,0,0,3">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <ListView x:Name="lstviewPockets" Margin="1,2,0,187" SelectionChanged="ListView_SelectionChanged" SelectedIndex="1" SelectionMode="Single" FontSize="16" d:ItemsSource="{d:SampleData ItemCount=5}" IsEnabled="{Binding _parameterSettings.EnableATC, ElementName=mainWindow}"                              
                              ItemContainerStyle="{StaticResource PocketListViewStyle}">



                        <ListView.View>
                            <GridView AllowsColumnReorder="False">
                                <GridViewColumn x:Name="gvcPocket" Header="Pocket" Width="50" DisplayMemberBinding="{Binding Pocket, StringFormat=\{0:D\}}"/>
                                <GridViewColumn Header="Tool" Width="50">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <local:ClickSelectTextBox x:Name="txtBoxToolNumber"  BorderThickness="1" Text="{Binding ToolNumber, Mode=TwoWay, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" KeyUp="txtBox_KeyUp" GotFocus="txtBoxToolNumber_GotFocus" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Description" Width="200">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <local:ClickSelectTextBox x:Name="txtBoxDescription" BorderThickness="1" Text="{Binding ToolInfo.Description, Mode=TwoWay }" IsEnabled="{Binding IsToolEnabled}" MaxLength="19" MaxLines="1"  KeyUp="txtBox_KeyUp"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Height" Width="100">
                                    <GridViewColumn.CellTemplate >
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="27"/>
                                                </Grid.ColumnDefinitions>

                                                <Label Content="{Binding ToolInfo.HeightOffset}" ContentStringFormat="{}{0:F3}" HorizontalContentAlignment="Right" Height="26" Padding="0,2,0,0"></Label>

                                                <Button x:Name="btnResetHeight" Content="X"  Width="22"  Margin="5,0,0,0" HorizontalAlignment="Right" Grid.Column="1" Click="btnResetHeight_Click"></Button>

                                            </Grid>

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="X" Width="90">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <local:ClickSelectTextBox x:Name="txtBoxX"  BorderThickness="1" Text="{Binding X, Mode=TwoWay, StringFormat={}{0:F3}}" KeyUp="txtBox_KeyUp" GotFocus="txtBoxToolNumber_GotFocus" HorizontalContentAlignment="Right" />

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Y" Width="90">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <local:ClickSelectTextBox x:Name="txtBoxY" BorderThickness="1" Text="{Binding Y, Mode=TwoWay, StringFormat={}{0:F3}}" KeyUp="txtBox_KeyUp" GotFocus="txtBoxToolNumber_GotFocus" HorizontalContentAlignment="Right"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="Z" Width="90">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <local:ClickSelectTextBox x:Name="txtBoxZ" BorderThickness="1" Text="{Binding Z, Mode=TwoWay, StringFormat={}{0:F3}}" KeyUp="txtBox_KeyUp" GotFocus="txtBoxToolNumber_GotFocus" HorizontalContentAlignment="Right"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>


                                <GridViewColumn Header="Style" Width="120">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>

                                            <ComboBox HorizontalAlignment="Left" VerticalAlignment="Top"  SelectedIndex="{Binding Style, Mode=TwoWay, Converter={StaticResource pocketStyleConverter}}" >

                                                <ComboBoxItem>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="{StaticResource xMinusImage}" Height="20"></Image>
                                                        <TextBlock Padding="5,0,0,0" Text="X Minus"></TextBlock>
                                                    </StackPanel>
                                                </ComboBoxItem>

                                                <ComboBoxItem>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="{StaticResource xPlusImage}" Height="20"></Image>
                                                        <TextBlock  Padding="5,0,0,0"  Text="X Plus"></TextBlock>
                                                    </StackPanel>
                                                </ComboBoxItem>

                                                <ComboBoxItem>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="{StaticResource yMinusImage}" Height="20"></Image>
                                                        <TextBlock  Padding="5,0,0,0" Text="Y Minus"></TextBlock>
                                                    </StackPanel>
                                                </ComboBoxItem>

                                                <ComboBoxItem>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="{StaticResource yPlusImage}" Height="20"></Image>
                                                        <TextBlock  Padding="5,0,0,0" Text="Y Plus"></TextBlock>
                                                    </StackPanel>
                                                </ComboBoxItem>

                                                <ComboBoxItem>
                                                    <StackPanel Orientation="Horizontal">
                                                        <Image Source="{StaticResource holeImage}" Height="20"></Image>
                                                        <TextBlock  Padding="5,0,0,0" Text="Hole"></TextBlock>
                                                    </StackPanel>
                                                </ComboBoxItem>


                                            </ComboBox>



                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>




                    </ListView>
                    <Grid x:Name="grdATCSettings" HorizontalAlignment="Center" Margin="0,0,0,-1" Width="876" IsEnabled="{Binding _parameterSettings.EnableATC, ElementName=mainWindow}" Height="158" VerticalAlignment="Bottom">

                        <Grid HorizontalAlignment="Left" Height="117" Margin="0,0,0,8" VerticalAlignment="Bottom" Width="329">
                            <Label x:Name="lblZBump" Content="Z Bump:" Margin="8,0,0,26" VerticalAlignment="Bottom" HorizontalContentAlignment="Right" HorizontalAlignment="Left" Width="158"/>
                            <local:ClickSelectTextBox x:Name="txtBoxZBump" Margin="175,0,31,30" TextWrapping="Wrap" Text="{Binding Settings.ZBump, ElementName=mainWindow, StringFormat=\{0:F3\}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" VerticalAlignment="Bottom"/>
                            <local:ClickSelectTextBox VerticalAlignment="Bottom" Text="{Binding _parameterSettings.SpindleWaitTime, ElementName=mainWindow,  StringFormat=\{0:F3\}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}" TextWrapping="Wrap" x:Name="txtBoxWaitTime" Margin="175,0,31,60" />

                            <Label x:Name="lblWaitTime" Content="Spindle Stop Wait:" Margin="1,24,0,57" HorizontalContentAlignment="Right" HorizontalAlignment="Left" Width="165"/>

                            <Label Content="Slide Distance:" Margin="8,-6,0,91" HorizontalAlignment="Left" Width="158" HorizontalContentAlignment="Right"/>

                            <local:ClickSelectTextBox x:Name="txtBxSlideDistance" Margin="175,0,30,91" TextWrapping="Wrap" Text="{Binding Settings.SlideDistance, ElementName=mainWindow, StringFormat=\{0:F3\}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"  />

                            <Label x:Name="lblRackOffset" Content="Rack Offset:" Margin="8,0,0,-4"  VerticalAlignment="Bottom" HorizontalContentAlignment="Right" HorizontalAlignment="Left" Width="158"/>

                            <local:ClickSelectTextBox x:Name="txtBoxRackOffset" TextWrapping="Wrap" Text="{Binding Settings.RackOffset, ElementName=mainWindow, StringFormat=\{0:F3\}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"  VerticalAlignment="Bottom" Margin="175,0,31,0"/>

                        </Grid>

                        <Button x:Name="btnWriteChanges" Content="Generate Macros" HorizontalAlignment="Right" Margin="0,0,13,93" Width="118" Click="btnWriteChanges_Click" Height="31" VerticalAlignment="Bottom"/>
                        <Button x:Name="btnAddPocket" Content="Add Pocket" HorizontalAlignment="Left" Margin="0,0,0,132" Width="150" Height="25" VerticalAlignment="Bottom" Click="btnAddPocket_Click"/>
                        <Button x:Name="btnRemoveLastPocket" Content="Remove Last Pocket" Margin="172,0,0,131" Click="btnRemoveLastPocket_Click" HorizontalAlignment="Left" Width="150" Height="28" VerticalAlignment="Bottom"/>
                        <Grid HorizontalAlignment="Left" Width="432" Margin="351,0,0,110" Height="48" VerticalAlignment="Bottom">
                            <Label Content="Assign Machine Coordinates:" HorizontalAlignment="Left" Margin="-1,-5,0,0" VerticalAlignment="Top" Width="262" HorizontalContentAlignment="Right"/>
                            <Button x:Name="btnAssignMachineCoordX" Content="X" HorizontalAlignment="Left" Margin="270,2,0,0" VerticalAlignment="Top" Height="24" Width="38" Click="btnAssignMachineCoordX_Click"/>
                            <Button x:Name="btnAssignMachineCoordY" Content="Y" HorizontalAlignment="Left" Margin="321,2,0,0" VerticalAlignment="Top" Height="24" Width="38" Click="btnAssignMachineCoordY_Click"/>
                            <Button x:Name="btnAssignMachineCoordZ" Content="Z" HorizontalAlignment="Left" Margin="372,2,0,0" VerticalAlignment="Top" Height="24" Width="38 " Click="btnAssignMachineCoordZ_Click"/>
                        </Grid>
                        <Grid HorizontalAlignment="Left" Height="122" Margin="353,0,0,1" VerticalAlignment="Bottom" Width="385">
                            <CheckBox x:Name="chkbxTestingMode" Content="Testing Mode Feed:" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="{Binding Settings.EnableTestingMode, ElementName=mainWindow, ValidatesOnExceptions=True}"  Width="180" Margin="0,-6,0,0" />
                            <local:ClickSelectTextBox x:Name="txtBoxTestingFeed" HorizontalAlignment="Left" Margin="183,-2,0,0" TextWrapping="Wrap" Text="{Binding Settings.TestingFeed, ElementName=mainWindow, StringFormat=\{0:F3\}, ValidatesOnDataErrors=True, ValidatesOnExceptions=True}"  IsEnabled="{Binding Settings.EnableTestingMode, ElementName=mainWindow}" Width="60"  VerticalAlignment="Top"/>
                            <CheckBox x:Name="chkbxCheckAirPressure" Content="Check Air Pressure" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="{Binding _parameterSettings.ShouldCheckAirPressure, ElementName=mainWindow, ValidatesOnExceptions=True}"  Width="182" Margin="0,21,0,0" />
                            <CheckBox x:Name="chkbxVirtualDrawbarButton" Content="Virtual Drawbar Button Support" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="{Binding _parameterSettings.EnableVirtualDrawbar, ElementName=mainWindow, ValidatesOnExceptions=True}" Width="295" Margin="0,49,0,0" />
                            <Button x:Name="btnAddRemoveVCPButton" Content="Add Drawbar Button to VCP" HorizontalAlignment="Left" Margin="129,76,0,0" VerticalAlignment="Top" Width="212" Click="btnAddRemoveVCPButton_Click" IsEnabled="{Binding _parameterSettings.EnableVirtualDrawbar, ElementName=mainWindow}"/>
                            <CheckBox x:Name="chkbxPromptForTouchPlate" Content="Prompt When Going to Touch Plate" HorizontalAlignment="Left" VerticalAlignment="Top" IsChecked="{Binding _parameterSettings.PromptWhenGoingToTouchPlate, ElementName=mainWindow, Mode=TwoWay, ValidatesOnExceptions=True}"  Width="325" Margin="0,92,0,0" />

                        </Grid>


                    </Grid>
                    <CheckBox x:Name="chkbxEnableATC" Content="Enable Automatic Tool Changer (ATC)" HorizontalAlignment="Left" Margin="8,0,0,161" Width="334" IsChecked="{Binding _parameterSettings.EnableATC, ElementName=mainWindow}" Height="25" VerticalAlignment="Bottom"/>
                    <CheckBox x:Name="chkbxLockToolPocketSettings" Content="Lock Tool Pocket Settings" HorizontalAlignment="Left" Margin="279,0,0,162" Width="225" Height="15" VerticalAlignment="Bottom" IsChecked="{Binding LockToolPocketSettings, Mode=TwoWay, Source={x:Static properties:Settings.Default}, UpdateSourceTrigger=Default, ValidatesOnNotifyDataErrors=True}" Visibility="Hidden"/>


                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
