<ResourceDictionary 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToolRackSetup"
        xmlns:properties="clr-namespace:ToolRackSetup.Properties"
        xmlns:Collections="clr-namespace:System.Collections;assembly=System.Collections.NonGeneric" 
        xmlns:System="clr-namespace:System;assembly=netstandard"                    
                    
                    >

    <SolidColorBrush  Color="#d1d1d1" x:Key="infoTextColor" />
    <SolidColorBrush  Color="#6c6c6c" x:Key="backgroundColor" />

    <SolidColorBrush  Color="#FF4E4D4D" x:Key="BorderColor" />

    <SolidColorBrush  Color="#c6c6c6" x:Key="LightWindowBackgroundColor" />
    
    <SolidColorBrush  Color="#494949" x:Key="editBackgroundColor" />
    <SolidColorBrush  Color="#FF005ABE" x:Key="selectedRowBackgroundColor" />
    <SolidColorBrush  Color="#FFAFACAC" x:Key="menuUneditableColor" />
    <SolidColorBrush Color="#FFE0E0E0" x:Key="HoverBackgroundColor" />
    <SolidColorBrush Color="#FF005ABE" x:Key="ButtonPressedColor"/>
    <SolidColorBrush Color="Black" x:Key="ButtonTextColor"/>
    <SolidColorBrush Color="White" x:Key="ButtonPressedTextColor"/>

    <System:Double x:Key="FontSize-Normal">18</System:Double>

    <Style TargetType="Control" x:Key="BaseColors">
        <Setter Property="Foreground" Value="{DynamicResource infoTextColor}" />
        <Setter Property='FontSize' Value="{DynamicResource FontSize-Normal}"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground"
              Value="{DynamicResource menuUneditableColor}" />
            </Trigger>
        </Style.Triggers>

    </Style>



    <Style TargetType="{x:Type local:ClickSelectTextBox}" BasedOn="{StaticResource BaseColors}" >
        <Setter Property="Background" Value="{DynamicResource editBackgroundColor}" />
        <Setter Property="Height" Value="26"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Bottom"/>

    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource BaseColors}">
    </Style>
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource infoTextColor}" />
        <Setter Property='FontSize' Value="{DynamicResource FontSize-Normal}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>


        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground"
                     Value="{DynamicResource menuUneditableColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource infoTextColor}" />
        <Setter Property='FontSize' Value="{DynamicResource FontSize-Normal}"/>

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground"
                  Value="{DynamicResource menuUneditableColor}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="ComboBoxItem">

    </Style>
    <Style TargetType="CheckBox" BasedOn="{StaticResource BaseColors}">
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Height" Value="30"></Setter>


    </Style>
    <Style TargetType="ListView">
        <Setter Property="Foreground" Value="{DynamicResource infoTextColor}" />
        <Setter Property="Background" Value="{DynamicResource backgroundColor}" />

    </Style>
    <Style TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource backgroundColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
    </Style>

    <Style x:Key="MyListViewStyle" TargetType="{x:Type ListViewItem}">

        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Margin" Value="0,-1,0,0"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border
                             BorderBrush="Transparent"
                             BorderThickness="2"
                             Background="{TemplateBinding Background}">
                        <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background"
                          Value="{DynamicResource selectedRowBackgroundColor}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="Black" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="TabItemStyle" TargetType="TabItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">

                    <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="{DynamicResource BorderColor}" CornerRadius="4,4,0,0" Margin="2,0">
                        <ContentPresenter x:Name="ContentSite"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            ContentSource="Header"
                                            Margin="10,2"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource backgroundColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource infoTextColor}"/>

                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="16"/>
    </Style>
    
    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource ButtonTextColor}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
					    x:Name="border"
					    Background="Transparent"
					    BorderThickness="0"
					    SnapsToDevicePixels="true">
                        <ContentPresenter
						    x:Name="contentPresenter"
						    Margin="0"
						    HorizontalAlignment="Center"
						    VerticalAlignment="Center"
						    Focusable="False"
						    RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource HoverBackgroundColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value= "{DynamicResource ButtonPressedColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonPressedTextColor}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
    </Style>

</ResourceDictionary>